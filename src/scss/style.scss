@use "sass:math";

@import "base/mixins";


// @import "fonts/fonts"; // local fonts
// @import "fonts/icons"; // icon fonts


//! @import "base/_functions";


// todo *Variables*
$fontFamily: "";
$fontSize: rem(14); // maket font in brackets
$textColor: #000;

$minWidth: 320;
$maxWidth: 1920;
$maxWidthContainer: 1170;
$containerPadding: 30;
$containerWidth: $maxWidthContainer + $containerPadding;

// Break-points
$pc: em($maxWidthContainer);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSmall: em(479.98);

// Adaptive type:
// 1 = responsive (without break-points),
// 2 = with break-points
$responsiveType: 2;

// todo *Nullstyle, Common parameters*
@import "base/_nullstyle";

body {
    font-family: $fontFamily;
	font-size: $fontSize;
    font-weight: 400; 
    color: $textColor;
    .lock & {
        overflow: hidden;
        touch-action: none;
    }
    .loaded & {
	}
}

.wrapper {
	display: flex;
	flex-direction: column;
	width: 100%;
	min-height: 100%;
	overflow: hidden;

    > main {flex: 1 1 auto;}
    > * {min-width: 0;} // fix for sliders
}

@if ($responsiveType==1) {
	// responsive
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// with break-points
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}


@import "base";

@import "header"; 
@import "footer";

@import "home";
